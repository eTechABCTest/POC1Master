<apex:page standardController="c2g__codaPurchaseInvoice__c" extensions="ICON_PayableInvoiceLine_Controller" sidebar="false" standardStylesheets="false">

	<head>

		<style>
		
			/* PageBlock Title */ 	
			.pbTitle {
				white-space: nowrap;
			}
			
			body {
				font-family: Arial,Helvetica,sans-serif;
				font-size: 75%;
			}
			
			table.MasterTable {
				border:1px solid black;
				border-collapse:collapse;
				width: 100%;
				table-layout: fixed;
				font-size: 100%;
				background-color:#fff;
				
				/*background-color:#f2f2f2;*/
				/*background-color:#cfeef8;*/
			}
			
			table.InfoTable {
				border:none;
				border-collapse:collapse;
				width: 100%;
				table-layout: fixed;
				font-size: 100%;
				/*background-color:#f2f2f2;*/
				/*background-color:#cfeef8;*/
			}

			th.InfoTable {
				text-align: left;
				font-weight: bold;
				padding:5px;
				color: #fff;
				background-color:#b4c374;
			}
						
			
			td.SummaryTable {
				border-bottom: 1px solid #ccc; 
				border-left:1px solid #ccc;
				padding:5px;
				vertical-align:top;
				
			}
			
			td.LabelCell {
				font-weight:bold;
				text-align:left;
				padding:5px;
				padding-right:15px;
							
			}
			
			td.DataCell {
				text-align:center;			
			}
			
			td.FirstRow {
				border-top:2px solid black;			
			}
			
			td.Spacer {
				border-bottom: 1px solid #ccc; 
				border-left:none;
			}
			
			th.Spacer {
				border-left:none;
				background-color:#cfeef8; /*Salesforce*/
			}
			
			
			td.NumberCell {
				text-align:right;
				width:65px;
				white-space:nowrap;
				padding-top:8px;
			}
			
			
			td.FirstCell {
				border-left:1px solid black;
			}
			
			
			td.InputCell {
				background-color:white;
			}
			
			td.LookupCell
			{
				text-align:left;
				white-space: nowrap;
			}
			
			
			td.TotalCell {
				font-weight:bold;
			}
			
			td.TotalDollarsCell {
				font-weight:bold;
			}
			
			td.UnitPriceCell {
				display:none;
			}
			
			
			td.TotalCellLast {
				border-bottom:3px double black;
				background-color:#e2e2e2;
			}
			
			
			td.ItemCell {
				text-align:left;
				white-space: nowrap;
				padding-top:8px;
			}
			
			
			
			td.TypeCell {
				border-left:1px solid black;
			}
			
			td.NotesCell {
				border-top:2px solid black;
				border-right:2px solid black;
				text-align:left;
			}
			
			@media screen and (-webkit-min-device-pixel-ratio:0) { 
				td.LastCell {
					border-right:1px solid black;
				}
			}
			
			th.SummaryTable {
				border-bottom: 1px solid black; 
				border-left:1px solid black;
				text-align: center;
				font-weight: bold;
				padding:5px;
				color: #fff;
				background-color:#b4c374;
				/*background-color:#1797c0;*/ /*Salesforce*/
			}
			
			td.TopTotal {
				background-color:#f2f2f7; /*Salesforce*/
			}
			
			td input.InputField[type=text]
			{
				text-align:right;
				border:none;
				width: 90%;
				display:inline;
				margin-right:4px;
				font-size: 9pt;
			}
			
			td input.InputFieldText[type=text]
			{
				text-align:left;
				border:none;
				width: 90%;
				display:inline;
				margin-right:4px;
				font-size: 9pt;
			}


			.InputTable td
			{
				padding:5px;
			}
			
			p
			{
				line-height:normal;
			}
		
			.btnDisabled 
			{
				opacity:.6;
			}
		
		
		</style>
		
		<apex:includeScript value="{!URLFOR($Resource.jQuery_ICON, '/jquery-ui-1.10.3.custom/js/jquery-1.9.1.js')}"  />
	
		<script>
		
			//prevent multiple saves from executing
			var isClicked = false;
			function checkDoubleClick(obj){
	            if (isClicked) 
	            {
	                return false;
	            }
	            else 
	            {
	                isClicked = true;
	                obj.value = 'Saving...';
	                obj.className = 'btnDisabled';//only shows the button as disabled.
	                return true;
	            }
			}		
		
			//override default function
			function setFocusOnLoad() {
				//find last empty cell and set focus there
				var SetFocusItems = document.getElementsByClassName("SetFocus");
				
				for(var i=0; i<SetFocusItems.length; i++)
				{
					var pInput=SetFocusItems[i].value;
					if (pInput=='') SetFocusItems[i].focus();
				
				}
				
			}
	            
	        var j$ = jQuery.noConflict();
	        j$(document).ready(function() {
	
				//calculate totals on each row -------------------
				j$('#DocumentLines').calculateTotals();
				
	        	//handle keeping totals on row --------------------------------------------------
	        	j$(".InputCell").change(function() {
	        		//current cell in table changed - calculate total for current row ---------------------------------
	  				j$('#DocumentLines').calculateTotals();
				});
				
				//Popout text box -----------------------------------------------------
				j$(".Popout").focusin(function(e){
					j$(this).height(65);
				});
				
				j$(".Popout").focusout(function(e){
					j$(this).height(13);
					j$(this).scrollTop(0);
				});

				
				//handle add new row click -----------------------------------------------------
				j$("#AddNewLine").click(function(e){
					//add line then set focus to GL field

				
					return(false);
				});
				

				
				
				
				//handle remove row click -----------------------------------------------------
				/*
				j$(".removeRow").click(function(e){
					
					//get row id
					var rowID = j$(this).closest('tr').attr('id');
					
					//first post data to server to store values - not to save to database
					
					
					//remove row from salesforce
					//call action script remove the specified ID from the list on the server
	    			RemoveLine(rowID);
					
					//remove row from table
					j$(this).closest('tr').remove();
					
					//recalculate totals
					j$('#DocumentLines').calculateTotals();
					
					return(false);
					
				});
				*/
				
				
				//handle keyboard navigation -----------------------------------------------------
					//37 - left
					//38 - up
					//39 - right
					//40 - down
				j$(".InputCell").keydown(function(e){
				
				    if (e.keyCode == 38) { 
					  //cache $(this);
					  var $this = j$(this);
					  
					  //First, get the index of the td.
					  var cellIndex = $this.index();
					  
					  //next, get the cell in the previous row that has the same index.
					  $this.closest('tr').prev().children().eq(cellIndex).find('input').focus().select();
	
					  var pPosition = j$(':focus').position(); 
					  
				    }
				    if (e.keyCode == 40) { 
					  
					  //cache $(this);
					  var $this = j$(this);
					  
					  //First, get the index of the td.
					  var cellIndex = $this.index();
					  
					  //next, get the cell in the next row that has the same index.
					  $this.closest('tr').next().children().eq(cellIndex).find('input').focus().select();			       
				    }
				});			
	
	        });

	        
	        //format all number cells in table (not needed) ------------------------------------------
			j$.fn.formatNumbers = function () {
			
				//take passed-in table and iterate every cell to format with commas
	 			j$(this).find('tr').each(function() {
	 				j$(this).find('td').each(function() {
	 					//as long as it is not an input cell, then format the numbers
	 				 	if (j$(this).find('input').length==0) j$(this).digits();
					});
	 			});
			}			
	
			//format the number contents with commas dynamically -----------------------------------------
			j$.fn.digits = function(){ 
			    return this.each(function(){ 
			        j$(this).text(j$(this).text().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,") ); 
			    });
			}
	        
	        
	        //calculate totals for each row and document -------------------------------------------
	        j$.fn.calculateTotals = function () {
	        
	        	var dGrandTotal=0.0;
	        	
				//force totals calculation for every row
				j$(this).find("tr").each(function(){

					//need to skip errors if field is blank or not numbers
					try
					{
						//pull in values to calculate
					
						var dNetValue = j$(this).find('.CalculateNetValue').val();
						dNetValue = dNetValue.replace(/,/g, '');
						if (isNaN(dNetValue)) dNetValue=0.0;
						
						dGrandTotal+=parseFloat(dNetValue);
	        		
					}
					catch(err)
					{
						//do nothing
					}
					
				});	
				
				dGrandTotal = dGrandTotal.toFixed(2);
				
				//put grand total in the footer
				j$('#BottomTotal').html(dGrandTotal);
				j$('#BottomTotal').digits();
				
					        	
	        }           
			
			
			
		</script>
		
		
		
		
	</head>

    <apex:form >
    
   		<apex:actionFunction name="RemoveLine" action="{!RemoveLine}" rerender="grid">
			<apex:param name="LineId" value=""></apex:param>
		</apex:actionFunction>

   		<apex:actionFunction name="AddLine" action="{!AddLine}" rerender="grid"/>
   		
   		<apex:actionFunction name="Cancel" action="{!Cancel}" rerender="false"/>
   		
    
        <apex:pageBlock title="Manage Expense Lines">

			<table border="0" cellspacing="0" cellpadding="0" class="InfoTable">
				
				<tr><td class="LabelCell" style="width:130px; height:1px; padding:0px;">&nbsp;</td> <td style="height:1px; padding:0px;">&nbsp;</td></tr>
				
				<tr><th class="InfoTable" colspan="2">Information</th></tr>
				
				<tr><td class="LabelCell" style="width:130px;">Payable Invoice:</td> <td><apex:outputField value="{!m_pHeader.Name}" /></td></tr>
				
				<tr><td class="LabelCell" style="width:130px;">Institution:</td> <td><apex:outputField value="{!m_pHeader.c2g__Account__c}" /></td></tr>
				
			</table>

						
			 
			
	    	

        
    		<br/>

            <apex:commandButton onclick="return checkDoubleClick(this)" value="Save Document" action="{!saveDocument}" style="margin-right:10px;"/>
            <apex:commandButton value="Cancel Changes" action="{!LoadDetails}" style="margin-right:10px;"/>
            <apex:commandButton value="Return to Payable Invoice" action="{!Cancel}" style="margin-right:10px;"/>


			<br/><br/>
            
            <apex:outputText value="{!showMessage}" escape="false" style="color:red;"/>         
            
            <hr/>
            
            
            <br/>
            
            <!-- Assemble table of Document  Lines here -->
            <h1>Payable Invoice Details</h1>
            <br/><br/>
            
            <apex:outputPanel id="grid">
            
            
            	<table border="0" cellspacing="0" cellpadding="0" class="MasterTable" id="DocumentLines">
            		<thead>
            			<tr>
            				<th class="SummaryTable" style="width:50px;">&nbsp;</th>
            				<th class="SummaryTable" style="white-space:wrap;" >General Ledger Account</th>
            				<th class="SummaryTable" style="white-space:wrap;" >Dimension 1</th>
            				<th class="SummaryTable" style="white-space:wrap;" >Description</th>
							<th class="SummaryTable" style="width:100px;">Net Value</th>
							<th class="SummaryTable" style="width:100px;">Non-Reportable</th>
            				<th class="SummaryTable" style="width:100px;">&nbsp;</th>
            			</tr>
					</thead>

					<tbody>
	            	<apex:repeat value="{!m_listLines}" var="pLine"> 
	            		<tr id="{!pLine.c2g__LineNumber__c}">
	            			<td class="SummaryTable ItemCell FirstCell" style="text-align:center;">{!pLine.c2g__LineNumber__c}</td>
							<td class="SummaryTable LookupCell"><apex:inputField value="{!pLine.c2g__GeneralLedgerAccount__c}" styleClass="InputFieldText SetFocus"/></td>
							<td class="SummaryTable LookupCell"><apex:inputField value="{!pLine.c2g__Dimension1__c}" styleClass="InputFieldText"/></td>
							<td class="SummaryTable InputCell"><apex:inputField value="{!pLine.c2g__LineDescription__c}" styleClass="InputFieldText Popout" style="width:98%; height:13px;"/></td>
							<td class="SummaryTable NumberCell InputCell"><apex:inputField value="{!pLine.c2g__NetValue__c}" styleClass="CalculateNetValue InputField"/></td>
							<td class="SummaryTable ItemCell InputCell" style="text-align:center; padding-top:5px;"><apex:inputField value="{!pLine.Non_Reportable__c}" styleClass="InputField"/></td>
							<td class="SummaryTable ItemCell FirstCell" style="text-align:center; padding-top:3px;"> 
								<!--  <button class="removeRow" tabindex="0">Remove</button> -->
								<apex:commandButton value="Remove Line" action="{!RemoveLine}" reRender="grid" >                        
									<apex:param name="LineId" value="{!pLine.c2g__LineNumber__c}" />
 								</apex:commandButton>  								
							</td>
	            		</tr>
	            	</apex:repeat>
	            	
	            	<!-- Total row -->
	            	<tr>
	            		<td class="FirstCell TotalCellLast SummaryTable" colspan="4" style="text-align:right; padding-top:8px;">Expense Lines Total</td>
	            		<td class="TotalCellLast SummaryTable NumberCell" style="font-weight:bold;" id="BottomTotal">{!m_dTotal}</td>
	            		<td class="TotalCellLast SummaryTable" colspan="2" style="text-align:right;">&nbsp;</td>
	            	</tr>
	            	
	            	</tbody>
            	</table>
            
            </apex:outputPanel>
            
            <br/><br/>
            <apex:commandButton value="Add New Line" action="{!AddLine}" style="margin-right:10px;"/>
            
            <hr/>
            
        </apex:pageBlock>
        
    </apex:form>
</apex:page>