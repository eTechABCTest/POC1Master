<!--Modified By - Abhinav Sharma - 05/25/2015 - CR-20140321-4840-->
<!--Updated By - Victor Hanson - 10/16/2014 - CR-5846-->
<apex:page controller="LineItemScheduleCloneController" showHeader="false" sidebar="false" docType="html-5.0" id="page">
    <apex:form id="mainForm" >
        <apex:actionFunction name="rerenderLIS" rerender="pgBlock" onComplete="unblockLineItems(); unblockContracts();" />
        <apex:actionFunction name="toggleSelected" rerender="pgBlock" action="{!toggleSelected}" onComplete="unblockLineItems(); unblockContracts();">
            <apex:param name="selectAllType"
                        value=""
                        assignTo="{!selectAllType}"/>
            <apex:param name="selectValue"
                        value=""
                        assignTo="{!selectValue}"/>
        </apex:actionFunction>
        <apex:actionFunction name="recalculateTotals" action="{!recalculateTotals}" rerender="totalsPanel" oncomplete="unblockTotals();" />
        
        <!-- Include page messages -->
        <!--include jquery-->
        <c:IncludeJQuery />
        <apex:sectionHeader title="{!ContractABC.Name}" subtitle="Clone Line Item Schedules"/>
        <apex:outputPanel layout="block" style="padding:0px 25px 10px 25px;">
            <apex:outputText value="Select one or more of the Contracts below to clone all <b>{!ContractABC.Line_Item_Schedule__r.size}</b> Line Items from the <b>{!ContractABC.Name}</b>  Contract to the selected Contracts."
            escape="false" rendered="{!NOT( IsSuccess )}"/>
        </apex:outputPanel>
        <apex:pageBlock id="pgBlock" rendered="{!NOT(hasErrors)}" mode="edit">
            <apex:pageBlockButtons id="pbButtons" location="bottom" style="clear:both; margin-top:15px;">
                <apex:actionStatus id="saveStatus">
                    <apex:facet name="stop">
                        <apex:commandButton value=" Clone Line Item Schedules " action="{!save}" onClick="blockLineItems();" reRender="pbButtons,mainForm" status="saveStatus" onComplete="unblockLineItems();" rendered="{!NOT( IsSuccess )}"/>
                    </apex:facet>
                    <apex:facet name="start">
                        <apex:commandButton value=" Saving... " disabled="true" status="saveStatus" />
                    </apex:facet>
                </apex:actionStatus>
                <apex:commandButton value=" Close " onClick="window.top.close();" rendered="{!IsSuccess}"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection title="Matching Contracts" columns="1" id="contractSection">
                <apex:pageBlockTable value="{!contractWrappers}" var="wrapper" rendered="{!contractWrappers.size > 0}">
                    <apex:column rendered="{!IsSuccess != true}" >
                        <apex:inputCheckbox onChange="blockLineItems(); blockContracts(); rerenderLIS();" value="{!wrapper.isSelected}" />
                        <apex:facet name="header">
                            <apex:inputCheckbox styleClass="selectAll" onChange="blockLineItems(); blockContracts(); toggleSelected('Contracts', this.checked);" />
                        </apex:facet>
                    </apex:column>
                    <apex:column style="white-space:nowrap;" >
                        <apex:facet name="header">Contract Name</apex:facet>
                        <apex:outputLink value="/{!wrapper.contractId}#{!LEFT(wrapper.contractId, LEN(wrapper.contractId)-3)}_00NC0000005U21Z_target" target="_blank">{!wrapper.contractName}</apex:outputLink>
                    </apex:column>
                    <apex:column value="{!wrapper.programAcronym}" headerValue="{!$ObjectType.Contract__c.fields.Program_Acronym__c.Label}" />
                    <apex:column value="{!wrapper.historicalLinker}" headerValue="{!$ObjectType.Contract__c.fields.Historical_Linker__c.Label}" />
                    <apex:column headerValue="{!$ObjectType.Contract__c.fields.Start__c.Label}" >
                        <apex:outputText value="{0, date, MM'/'dd'/'yyyy}">
                            <apex:param value="{!wrapper.startDate}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$ObjectType.Contract__c.fields.End__c.Label}" >
                        <apex:outputText value="{0, date, MM'/'dd'/'yyyy}">
                            <apex:param value="{!wrapper.endDate}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="{!$ObjectType.Contract__c.fields.Negotiated_Amount__c.Label}" >
                        <apex:outputText value="{0, number, $#,##0.00}">
                            <apex:param value="{!wrapper.negotiatedAmount}" />
                        </apex:outputText>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header"># Line Item Schedules</apex:facet>
                        <apex:outputText value="{!wrapper.numLineItems}" />
                    </apex:column>
                </apex:pageBlockTable>
            </apex:pageBlockSection>
            
            <!--Added By - Abhinav Sharma - 05/25/2015 - CR-20140321-4840-->
            <apex:variable value="{!1}" var="count"/>
            <apex:outputPanel layout="block" style="margin-left:22px; margin-top:15px; white-space: nowrap;" id="LISWrapperPanel">
                <apex:repeat value="{!selectedContractWrappers}" var="lIS" rendered="{!selectedContractWrappers.size > 0}"  id="innerWrapTable">
                    <apex:dataTable value="{!lIS.lineItems}" var="item" style="display:inline-block;" styleClass="LISTable {!IF(count == 1, 'firstTable', '')} {!IF(count == selectedContractWrappers.size, 'firstTable', '')}" id="LISDataTable">
                        <apex:column rendered="{!count == 1}" headerClass="firstColumn" styleClass="firstColumn" >
                            <apex:inputCheckbox onChange="blockLineItems(); toggleSelected('{!item.originalLineItemId}', this.checked);" value="{!item.isSelected}" />
                            <apex:facet name="header">
                                <apex:inputCheckbox styleClass="selectAll" value="{!isChecked_LineItems}" onChange="blockLineItems(); toggleSelected('LineItems', this.checked);" />
                            </apex:facet>
                        </apex:column>
                        <apex:column styleClass="dataColumn date" rendered="{!count == 1}"
                                     headerValue="{!$ObjectType.Line_Item_Schedule__c.fields.Invoice_Date__c.Label}" value="{!item.LineItem.Invoice_Date__c}"/>
                        <apex:column styleClass="dataColumn type" rendered="{!count == 1}"
                                     headerValue="{!$ObjectType.Line_Item_Schedule__c.fields.Type__c.Label}" value="{!item.LineItem.Type__c}"/>
                        <apex:column styleClass="dataColumn amount {!IF(count == selectedContractWrappers.size, 'lastColumn', '')}"
                                     headerClass="{!IF(count == selectedContractWrappers.size, 'lastColumn', '')}"
                                     headerValue="[ {!lIS.historicalLinker}-{!lIS.programAcronym} ] {!$ObjectType.Line_Item_Schedule__c.fields.Amount__c.Label}">
                            <apex:inputField value="{!item.LineItem.Amount__c}"  id="amountInput" rendered="{!item.isSelected}" html-onPaste="handlepaste(this, event);"
                                             onchange="handleBlur(this); blockTotals(); recalculateTotals();"  style="width: 150px;"/>
                            <apex:inputField value="{!item.LineItem.Amount__c}" html-disabled="disabled" rendered="{!NOT(item.isSelected)}" id="disabledAmtInput" style="width: 150px;"/>
                        </apex:column>
                    </apex:dataTable>
                    <apex:variable value="{!count + 1}" var="count"/>
                </apex:repeat>
                
                <apex:outputPanel layout="block" style="margin-left:148px;" id="totalsPanel" >
                    <apex:outputPanel id="totalLabelTable" rendered="{!selectedContractWrappers.size > 0}">
                        <table style="display:inline-block; width:80px; padding:5px;">
                            <tr>
                                <td>Total</td>
                            </tr>
                            <tr>
                                <td>Negotiated</td>
                            </tr>
                            <tr>
                                <td>Discrepancy</td>
                            </tr>
                        </table>
                    </apex:outputPanel>
                    <apex:repeat value="{!selectedContractWrappers}" var="lIS" rendered="{!selectedContractWrappers.size > 0}"  id="totalWrapTable">
                        <table style="display:inline-block; width:172px; padding:5px;">
                            <tr>
                                <td>
                                    <apex:outputText value="{0, number, $#,##0.00}">
                                        <apex:param value="{!lIS.total}" />
                                    </apex:outputText>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{0, number, $#,##0.00}">
                                        <apex:param value="{!lIS.negotiatedAmount}" />
                                    </apex:outputText>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <apex:outputText value="{0, number, $#,##0.00}" rendered="{!lIS.discrepancy >= 0}" style="{!IF (lIS.discrepancy > 0, 'color:red', '')}">
                                        <apex:param value="{!lIS.discrepancy}"/>
                                    </apex:outputText>
                                    <apex:outputText value="({0, number, $#,##0.00})" rendered="{!lIS.discrepancy < 0}" style="color:red">
                                        <apex:param value="{!lIS.discrepancy * -1}"/>
                                    </apex:outputText>
                                    
                                </td>
                            </tr>
                        </table>
                    </apex:repeat>
                </apex:outputPanel>
            </apex:outputPanel>
            <apex:outputPanel style="margin-top:15px; clear:both;" layout="block" />
        </apex:pageBlock>
    </apex:form>
    
    <style>
        .LISTable {
        background-color: white;
        border-bottom: 1px solid #E0E3E5;
        }
        
        .LISTable td {
        padding: 5px;
        border-top: 1px solid #EDEDED;
        }
        
        .LISTable th {
        font-size: .9em;
        margin-right:5px;
        padding:7px;
        background-color: #F2F3F3;
        border-bottom: 1px solid #E3DEB8;
        border-right: 1px solid #E0E3E5;
        border-top: 1px solid #E0E3E5;
        height: 19px;
        }
        
        .firstColumn, firstTable {
        border-left: 1px solid #E0E3E5 !important;
        }
        
        .lastColumn, lastTable {
        border-right: 1px solid #E0E3E5 !important;
        }
        
        .date {
        width: 88px;
        }
        
        .type {
        width: 80px;
        }
        
        
    </style>
    
    <!--Added By - Abhinav Sharma - 05/25/2014 - CR-20140321-4840-->
    <!--Updated By - Victor Hanson - 10/16/2014 - CR-5846-->
    <script type="text/javascript">
    
    //Properties
    var afterPasteCellValue = '';
    //Function to hold logic related to onPaste event on input box
    function handlepaste(el, event) {
        
        //Checking for the event type, Performing the below logic only and only if event equals "Paste"
        if(event.type == 'paste') {
            
            //Variable to hold ClipboardData on the fly
            var pastedValue;
            //On the fly getting clipboardData value going to be pasted into input box
            if (window.clipboardData && window.clipboardData.getData) {
                pastedValue = window.clipboardData.getData('Text');
            } else if (event.clipboardData && event.clipboardData.getData) {
                pastedValue = event.clipboardData.getData('text/plain');
            }
            
            var clipText = pastedValue;
            
            var clipRows = clipText.split(String.fromCharCode(10));
            // split rows into columns
            for (i=0; i<clipRows.length; i++) {
                if (clipRows[i].split(String.fromCharCode(9)) != "") {
                    clipRows[i] = clipRows[i].split(String.fromCharCode(9));
                }
            }
            
            var firstCol = j$(el).attr('Id').split(':')[4];
            var firstRow = j$(el).attr('id').split(':')[6]; //ie: "amountInput" -> 1
            
            
            for (i=firstRow; i <= Math.max(firstRow+clipRows.length-2, 1); i++) {
                
                var actualRow = i-firstRow;
                afterPasteCellValue = clipRows[0][0];
                
                try {
                    for (j=firstCol; j < (firstCol+clipRows[actualRow].length); j++) {
                        var actualCol = j-firstCol;
                        var elementId = "page:mainForm:pgBlock:innerWrapTable:" + j + ":LISDataTable:" + i + ":amountInput";
                        if (clipRows[actualRow][actualCol].length == 0 && document.getElementById(elementId)) {
                            document.getElementById(elementId).value = '';
                        }
                        else if (document.getElementById(elementId)) {
                            document.getElementById(elementId).value = clipRows[actualRow][actualCol];
                        }
                    }
                } catch(err) {
                    console.log('@@@Exception:' + err);
                }
            }             
        }
    }
    
    //Function to hold the logic will be performed on blur event
    //Helpful in populating input box with corrected value
    function handleBlur(el) {
        //Checking for variable value
        if(afterPasteCellValue != '') {
            j$(el).val(afterPasteCellValue);
            afterPasteCellValue = '';
        }
    }
    
    //block the line item section
    var lineItemSectionId = '#page\\:mainForm\\:pgBlock\\:LISWrapperPanel';
    function blockLineItems() {
        blockElement(lineItemSectionId, null);
    }
    
    function unblockLineItems() {
        unblockElement(lineItemSectionId, null);
    }
    
    var totalsPanelId = '#page\\:mainForm\\:pgBlock\\:totalsPanel';
    function blockTotals() {
         blockElement(totalsPanelId, 'Recalculating...');
    }
    function unblockTotals() {
        unblockElement(totalsPanelId);
    }
    
    var contractSectionId = '#page\\:mainForm\\:pgBlock\\:contractSection';
    function blockContracts() {
        blockElement(contractSectionId, null);
    }
    function unblockContracts() {
        unblockElement(contractSectionId);
    }    
    </script>
</apex:page>