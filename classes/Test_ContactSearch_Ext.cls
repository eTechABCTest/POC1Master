/*
 * This class contains unit tests for validating the behavior of Apex classes
 * and triggers.
 *
 * Unit tests are class methods that verify whether a particular piece
 * of code is working properly. Unit test methods take no arguments,
 * commit no data to the database, and are flagged with the testMethod
 * keyword in the method definition.
 *
 * All test methods in an organization are executed whenever Apex code is deployed
 * to a production organization to confirm correctness, ensure code
 * coverage, and prevent regressions. All Apex classes are
 * required to have at least 75% code coverage in order to be deployed
 * to a production organization. In addition, all triggers must have some code coverage.
 * 
 * The @isTest class annotation indicates this class only contains test
 * methods. Classes defined with the @isTest annotation do not count against
 * the organization size limit for all Apex scripts.
 *
 * See the Apex Language Reference for more information about Testing and Code Coverage.
 */
@isTest(seeAllData=false)
private class Test_ContactSearch_Ext {
    
    //Test Method for Searching Contact 
    static testMethod void myUnitTest(){
            
        //Create dummy data for testing Purpose
        Account acc = new Account();
        acc.Name = 'Testaccount1';
        
        //Insert record
        insert acc;
        
        //Create dummy data for testing Purpose
        Account acc1 = new Account();
        acc1.Name = 'Testaccount2';
        
        //Insert record
        insert acc1;
        
        //Create a list of Contact records
        List<Contact> conList = new List<Contact>();
        
        //create new Contact
        Contact con1 = new Contact(FirstName = 'Test', LastName = 'Contact1', Email = 'test1@test.com',
                                    Phone = '21212121', AccountId = acc.Id);
        
        //create new Contact
        Contact con2 = new Contact(FirstName = 'Test', LastName = 'Contact2', Email = 'test2@test.com',
                                    Phone = '31313131', AccountId = acc.Id);
        
        //create new Contact
        Contact con3 = new Contact(FirstName = 'Test', LastName = 'Contact3', Email = 'test3@test.com',
                                    Phone = '41414141', AccountId = acc1.Id);
        
        //create new Contact
        Contact con4 = new Contact(FirstName = 'Test', LastName = 'Contact4', Email = 'test4@test.com',
                                    Phone = '51515151', AccountId = acc.Id);
        
        conList.add(con1);
        conList.add(con2);
        conList.add(con3);
        conList.add(con4);
        
        //Insert Contacts
        insert conList;
            
        //Calling constructor
        ApexPages.StandardController sc = new ApexPages.StandardController(acc);
        
        //Start Testing from here
        Test.startTest();
        
        //Calling Class Constructor
        ContactSearch_Ext controller = new ContactSearch_Ext(sc);
        
        //Call search method
        controller.searchText = 'Contact';
        controller.search();
        
        //Query through Contact records
        List<Contact> contacts = [SELECT Id, Name, Email, Phone FROM Contact WHERE AccountId =: acc.Id LIMIT 10];
        
        //Check for correct result
        System.assertEquals(3,contacts.size());
        System.assertEquals(contacts[0].Email, conList[0].Email);
        System.assertEquals(contacts[1].Email, conList[1].Email);
        System.assertEquals(contacts[2].Email, conList[3].Email);
        System.assertEquals(contacts[0].Phone, conList[0].Phone);        
        System.assertEquals(contacts[1].Phone, conList[1].Phone);        
        System.assertEquals(contacts[2].Phone, conList[3].Phone);        
        
        //Re-initialise list to hold contact records of another account
        contacts = [SELECT Id, Name, Email, Phone FROM Contact WHERE AccountId =: acc1.Id];
        
        //Check for correct result
        System.assertEquals(1,contacts.size());
        System.assertEquals(contacts[0].Email, conList[2].Email);
        System.assertEquals(contacts[0].Phone, conList[2].Phone);        
        
        //Stopping the test
        Test.stopTest();
    }
}