<!-- V_1.0 - Modified - Rajeev Jain - 04/05/2016 - CR-20160304-9674 - ISSP Deployment E 
                        - Modified selectedRecordType method in this component to include Staff Member Hide show logic on the popup
    V_1.1 - Modified - Rajeev Jain - 05/11/2016 - CR-20160307-9680 - ISSP Deployment E
-->
<apex:component >
    <apex:attribute name="stdGSWrapper" type="StdGoalSectionWrapper" description=""/>
    <head>
        <meta charset="utf-8" />
        <title>Define Standard Goal</title>
        <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
        <script src="//code.jquery.com/jquery-1.10.2.js"></script>
        <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
        <link rel="stylesheet" href="/resources/demos/style.css" />
            
        <script>
            
            function validateBaseLineData(elem){
                if(elem.value == ''){
                    $('.baseLinePercentage').val('');
                }
            }
               
            //format List of Reduction Price
            function formatReductionPrice(listPrice){
            
                if(listPrice!=''){
                    data = listPrice.replace(/,/g,"");
                    if(data.indexOf("$")==0)                
                    data = data.substring(1,data.length); 
                    listPrice='$'+ data.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    return listPrice;
                }
            }
                
            function validateRequiredData(elem){
                
                //Handle Implicitly for visible data
                var $visibleWrapper;
                var $visibleDialogWrapper = $('.dialogWrapper:visible');
                if($visibleDialogWrapper != null || $visibleDialogWrapper != undefined){
                    $visibleWrapper = $visibleDialogWrapper;
                    if($visibleDialogWrapper.find('.dialog1Inner').is(':visible')){
                        $visibleWrapper = $visibleDialogWrapper.find('.dialog1Inner:visible');  
                    }
                }
                var isAllRequiredFieldHasFilled = true;
                
                //Check all required field if they filled with Required data
                $visibleWrapper.find('.requiredField').each(function(i){
                    
                    if($(this).find('input[type="text"]:visible').val() == ''){
                    
                        $(this).find('.timeLineIcon-red').show();
                        $(this).find('input').css('border', '1px solid #D0212F');
                        isAllRequiredFieldHasFilled = false;
                    }else if($(this).find('select:visible').val() == ''){
                        $(this).find('.timeLineIcon-red').show();
                        $(this).find('select').addClass('requiredSelect');
                        isAllRequiredFieldHasFilled = false;
                    }else{
                        $(this).find('input').css('border', '');
                        $(this).find('select').removeClass('requiredSelect');
                    }
                });
                
                if(isAllRequiredFieldHasFilled == false)
                    $visibleWrapper.find('.errorMSG').text('Please fill all the required fields.');
                else
                    $visibleWrapper.find('.errorMSG').text('');
                
                //Check for Either Required field in which either one of the field should be filled or should be both blank
                var eitherFilledCounter = 0;
                var eitherElem1 = $visibleWrapper.find('.eitherRequiredField').eq(0).find('input[type="text"]');
                var eitherElem2 = $visibleWrapper.find('.eitherRequiredField').eq(1).find('input[type="text"]');
                var eitherLabel1 = $visibleWrapper.find('.eitherRequiredLable').eq(0);
                var eitherLabel2 = $visibleWrapper.find('.eitherRequiredLable').eq(1);
                
                if(eitherElem1.val() == '' && eitherElem2.val() == ''){
                    
                    $visibleWrapper.find('.eitherError').text('You must supply EITHER '+ eitherLabel1.text() + ' OR ' + eitherLabel2.text());
                    isAllRequiredFieldHasFilled = false;
                }else if(eitherElem1.val() != '' && eitherElem2.val() != '' && eitherElem1.val() != undefined && eitherElem2.val() != undefined){
                    
                    $visibleWrapper.find('.eitherError').text('You must supply EITHER '+ eitherLabel1.text() + ' OR ' + eitherLabel2.text());
                    isAllRequiredFieldHasFilled = false;
                }else{
                    $visibleWrapper.find('.eitherError').text('');
                    
                }
                if(isAllRequiredFieldHasFilled == false)
                    return false;
                return true;
            }
            function addConditionMed(elem){
                if(validateRequiredData(elem) == true){
                    var isOpenedFromFilteredPopup = $("#customDialog").is(':visible') && $("#customDialog").attr('isItOpenedFromFilterPopup') != undefined ? $("#customDialog").attr('isItOpenedFromFilterPopup') : ''; 
                    addCondition(isOpenedFromFilteredPopup);    
                }
            }
            
            function addStandarddGDetail(elem){
                if(validateRequiredData(elem) == true){
                
                    //Variable
                    var gTAmount = $('#pge\\:frm\\:pB\\:amount').val();
                    var gTCount = $('#pge\\:frm\\:pB\\:counter').val();
                    var gTPercent = $('#pge\\:frm\\:pB\\:percent').val();
                    var gTVT = $('#pge\\:frm\\:pB\\:valueType').val();
                    
                    //Check for Value
                    if(gTAmount != '' && gTAmount != null && gTAmount != NaN && gTAmount != 'NaN' && gTAmount != undefined)
                        gTAmount = gTAmount.split(',').join('');
                    
                    if(gTCount != '' && gTCount != null && gTCount != NaN && gTCount != 'NaN' && gTCount != undefined)
                        gTCount = gTCount.split(',').join('');
                    
                    addStdGDetail(gTAmount, gTCount, gTPercent,gTVT);
                }
            }
            
            function doCalculation(){
                
                //Variable
                var gTAmount = $('#pge\\:frm\\:pB\\:amount').val();
                var gTCount = $('#pge\\:frm\\:pB\\:counter').val();
                var gTPercent = $('#pge\\:frm\\:pB\\:percent').val();
                var gTValueType = $('#pge\\:frm\\:pB\\:valueType').val();
                
                //Check for Value
                if(gTAmount != '' && gTAmount != null && gTAmount != NaN && gTAmount != 'NaN' && gTAmount != undefined)
                    gTAmount = gTAmount.split(',').join('');
                
                if(gTCount != '' && gTCount != null && gTCount != NaN && gTCount != 'NaN' && gTCount != undefined)
                    gTCount = gTCount.split(',').join('');
                
                doCalc(gTAmount, gTCount, gTPercent, gTValueType);
            }
            
            //Function to add pacings
            function addStandarddGDetailPacings(elem){
                if(validateRequiredData(elem) == true){
                    addStdGDetailPacings();
                }
            }
            function refreshAddConditions(){
                 
                 
                var isNeedToOpenFilteredBox = false;
                if($("#customDialog").attr('isItOpenedFromFilterPopup') != undefined && $("#customDialog").attr('isItOpenedFromFilterPopup') == 'true'){
                    
                    isNeedToOpenFilteredBox = true; 
                } 
                
                $('#customDialog').hide();
                $('#overlay').hide();
                $('.dialog1Inner').hide();
                
                if(isNeedToOpenFilteredBox){
                    $("#customDialog").attr('isItOpenedFromFilterPopup','false');
                    showSGDConditionsDialogbox();
                    hideLoading();
                }
            }
            $(function() {
                $( "#accordion").accordion({
                    heightStyle: "content"
                });
                   
                $('input[value = "New"]').on('click',function(){
                    $('.dialogWrapper').show();
                    $('.loadingBox').hide();
                });
                
                $('input[value = "Save"]').on('click',function(){
                    var isValidationPassed = validateRequiredData(this);
                    
                    if(isValidationPassed){
                        
                        $('.dialogWrapper').hide();
                        $('.loadingBox').show();
                        $('.loadingText').text('Saving....');
                        
                    }
                });
                $('.disableInputEnter').find('input[type="text"]').on('keypress',function(evt){
                    
                     var evt = (evt) ? evt : ((event) ? event : null); 
                      var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); 
                      if ((evt.keyCode == 13) && (node.type=="text"))  {return false;}  
                });
                   
                $(document).keyup(function(e) {
                     if (e.keyCode == 27) { // escape key maps to keycode `27`
                        
                        var isGTDMPDialog = $('#gTDMPcustomDialog').is(':visible');
                        
                        if($('.customDialog').is(':visible')){
                            var $visibleDialog = $('.customDialog:visible');
                            cancelAll();
                        
                            $visibleDialog.hide();
                            $('#overlay').hide();
                            $('.dialog1Inner').hide();
                            
                            if(isGTDMPDialog) {
                                cancelAll();
                                refreshGTDMPs();
                            }
                            
                            refreshAddConditions();
                      }
                    }
                });
                $('.customDialog').each(function(){
                       
                    $(this).on('keypress',function(evt){
                           
                        if($(this).is(':visible')){
                            var evt = (evt) ? evt : ((event) ? event : null); 
                            var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); 
                                
                            if(evt.keyCode == 13){
                                   
                                if(node.type=="button" && node.value == 'Save'){
                                   
                                    $(evt.target).trigger('click');
                                }
                            }
                            if ((evt.keyCode == 13) && (node.type=="text" || node.type=="button") )  {return false;}
                        }
                    });
                });
            });
             
            function openDialogbox(isOpenedFromFilterBox) {
                $("#customDialog").show();
                $("#customDialog").attr('isItOpenedFromFilterPopup',isOpenedFromFilterBox);
                if(isOpenedFromFilterBox == 'true'){
                    $("#filterPopup").hide();
                }
                $("#overlay").show();
            }
                
            function openSaesRoleDialogbox() {
                //$("#dialog1").show();
                //$("#overlay").show();
                document.getElementById('pge:frm:pB:businessTitleLookup_lkwgt').click();
            }
                
            function openstdGDeatilDialogbox() {
                $("#dialog2").show();
                $("#overlay").show();
            }
                
            function openstdGDeatilPacingDialogbox() {
                $("#pacingDialog").show();
                $("#overlay").show();
            } 
                
            function selectAllCheckboxes(obj,receivedInputClasses){
                var inputCheckBox = document.getElementsByClassName(receivedInputClasses);                  
                for(var i=0; i<inputCheckBox.length; i++){          
                    inputCheckBox[i].checked = obj.checked;
                }
                enableDisbaleDefineGoalTemplateActionButtons();
            }
                
            //Function to display condition field according to selected record type
            function selectedRecordType(elem) {
                
                if(elem.value != '')
                    document.getElementById('conditionSet').style.display = 'block';
                else
                    document.getElementById('conditionSet').style.display = 'none';
                        
                //Set div properties
                document.getElementById('{!stdGSWrapper.conditionRTypes[1].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[2].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[3].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[4].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[5].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[6].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[7].value}').style.display = 'none';
                document.getElementById('{!stdGSWrapper.conditionRTypes[8].value}').style.display = 'none';
                document.getElementById(elem.options[elem.selectedIndex].value).style.display = 'block';
            }
                
            //Function to display Value fields for stadnard goal
            function controlstdGoalValue(elem) {
                    
                //Set properties
                $('#pge\\:frm\\:pB\\:amount').hide();
                $('#pge\\:frm\\:pB\\:counter').hide();
                $('#pge\\:frm\\:pB\\:percent').hide();
                    
                //Check for selected option
                if(elem.options[elem.selectedIndex].value == 'Amount') {
                    $('#pge\\:frm\\:pB\\:amount').show();
                    document.getElementById('stdGoalValue').textContent = formatReductionPrice($('#pge\\:frm\\:pB\\:amount').val());
                    $('#pge\\:frm\\:pB\\:counter').val(null);
                    $('#pge\\:frm\\:pB\\:percent').val(null);
                    
                } else if(elem.options[elem.selectedIndex].value == 'Count') {
                    $('#pge\\:frm\\:pB\\:counter').show();
                    document.getElementById('stdGoalValue').textContent = $('#pge\\:frm\\:pB\\:counter').val();
                    $('#pge\\:frm\\:pB\\:amount').val(null);
                    $('#pge\\:frm\\:pB\\:percent').val(null);
                    
                } else if(elem.options[elem.selectedIndex].value == 'Percent') {
                    $('#pge\\:frm\\:pB\\:percent').show();
                    document.getElementById('stdGoalValue').textContent = $('#pge\\:frm\\:pB\\:percent').val();
                    $('#pge\\:frm\\:pB\\:counter').val(null);
                    $('#pge\\:frm\\:pB\\:amount').val(null);
                }
            }
            
            function editDetailsInPopup(rowIndex,colElem,tableClass,popupRef){
                
                hideLoading();
                var tableRef = document.getElementsByClassName(tableClass)[0];
                
                var tableCells = tableRef.rows[rowIndex].cells;
                $(popupRef).find('.dialogWrapper').find('input').each(function(i){
                    
                    if(tableCells[i+1] != undefined)
                        $(this).val(tableCells[i+1].textContent);
                        
                });
                    
                $(popupRef).show();
            }
            
            function editConditionMed(rowNum,RecordTypeId,isOpenedFromFilterBox){
                    
                openDialogbox(isOpenedFromFilterBox);
                showLoading();
                
                $('#customDialog').attr('selectedRType',RecordTypeId);
                editCondition(rowNum,RecordTypeId,isOpenedFromFilterBox);
            }
            
            function onCompleteWorks(){
                $('#customDialog').find('.typeSelect').val($('#customDialog').attr('selectedRType'));
                $('#customDialog').find('.typeSelect').trigger('onchange');
                hideLoading()
            }
            function hideLoading(){
                
                $('.loadingBox').hide();
                $('.dialogWrapper').show();
            }
            function showLoading(){
                $('.dialogWrapper').hide();
                $('.loadingBox').show();
                $('.loadingText').text('Loading....');
            }
            function editSalesRoleMe(rowNum){
                $("#dialog1").show();
                $("#overlay").show();
                showLoading();
                editSalesRole(rowNum);
            }
            function editStdGDetailMe(rowNum) {
                    
                openstdGDeatilDialogbox();
                showLoading();
                editStdGDetail(rowNum);
            }
            function showSGDConditionsPopup(rowNum){
                showSGDConditionsDialogbox();
                showLoading();
                showSGDConditions(rowNum);
            }
                
            function showSGDConditionsDialogbox() {
              $("#filterPopup").show();
              $("#overlay").show();
            }
            function editStdGDetailPacingMe(rowNum) {
                
                openstdGDeatilPacingDialogbox();
                showLoading();
                reRenderfunction(rowNum)
            }
            
            function openstdGDeatilPacingDialogbox() {
                
                $("#pacingDialog").show();
              $("#overlay").show();
                
            }
           
            //Function to populate discription and Amount field values on summary section
            function updateSummary(actualId, summaryId) {
                
                //Get field value
                var actualValue = document.getElementById(actualId);
                //Update same in summary section
                if(summaryId == 'stdGoalValue') {
                    
                    if(actualId == 'pge:frm:pB:amount')
                        document.getElementById(summaryId).textContent = formatReductionPrice(actualValue.value);
                    else
                        document.getElementById(summaryId).textContent = actualValue.value;
                } else
                    document.getElementById(summaryId).innerHTML = actualValue.value;
            }
              
            //Function to cancel
            function cancelbtn() {
                
                //Remove all the error MSGs
                $('.dialogWrapper:visible').find('.errorMSG').text('');
                $('.dialogWrapper:visible').find('.eitherError').text('');
                
                var isGTDMPDialog = $('#gTDMPcustomDialog').is(':visible');
                
                if($('.customDialog').is(':visible')){
                           
                    var $visibleDialog = $('.customDialog:visible');
                    cancelAll();
                    $visibleDialog.hide();
                    $('#overlay').hide();
                    $('.dialog1Inner').hide();
                }
                
                if(isGTDMPDialog) {
                    cancelAll();
                    refreshGTDMPs();
                }
                
                
                refreshAddConditions();
            }
              
            function baselinecontrol(elem) {
                
                //Check for current property
                if(elem == 'Paced') {
                    $('.explictTargetType').css("display",'none');
                
                }else {
                    $('.explictTargetType').css("display",'table-row');
                }
            }
                
            function inLineBaselinecontrol(elem) {
                
                //Check for current property
                if(elem.value == 'Paced') {
                    $('.explictTargetType').css("display",'none');
                
                }else {
                    $('.explictTargetType').css("display",'table-row');
                }
                    
            }
            
            function savebaselinecontrol() {
                $('.targetType').css("display",'block');
            }
                
            //Function to show pacing fields
            function controlPacingValue(elem, rowNo) {
                    
                //field Ids
                var pacingPercent = "#pge\\:frm\\:pB\\:stdGDetailPacingsList\\:" + rowNo + "\\:pacingPercent";
                var pacingAmount = "#pge\\:frm\\:pB\\:stdGDetailPacingsList\\:" + rowNo + "\\:pacingAmount";
                var pacingCount = "#pge\\:frm\\:pB\\:stdGDetailPacingsList\\:" + rowNo + "\\:pacingCount";
                    
                //Set default style
                $(pacingPercent).css("display", "none");
                $(pacingAmount).css("display", "none");
                $(pacingCount).css("display", "none");  
                        
                //Check for option
                if(elem.options[elem.selectedIndex].value == 'Percent') {
                
                    $(pacingPercent).css("display", "inline");
                    
                    $(pacingAmount).val(null);
                    $(pacingCount).val(null);
                
                } else if(elem.options[elem.selectedIndex].value == 'Amount') {
                        
                    $(pacingAmount).css("display", "inline");
                
                    $(pacingPercent).val(null);
                    $(pacingCount).val(null);
                        
                } else if(elem.options[elem.selectedIndex].value == 'Count') {
                        
                    $(pacingCount).css("display", "inline");
                    
                    $(pacingPercent).val(null);
                    $(pacingAmount).val(null);
                }
            }
                
            //Function to control the pacing value in case of new
            function newPacingValue(elem) {
                
                //Set default style
                $('#pge\\:frm\\:sGDPPercent').css("display", "none");
                $('#pge\\:frm\\:sGDPAmount').css("display", "none");
                $('#pge\\:frm\\:sGDPCount').css("display", "none");
                    
                //Check for option
                if(elem.options[elem.selectedIndex].value == 'Percent') {
                    
                    $('#pge\\:frm\\:sGDPPercent').css("display", "inline");
                    
                    $('#pge\\:frm\\:sGDPAmount').val(null);
                    $('#pge\\:frm\\:sGDPCount').val(null);
                    
                } else if(elem.options[elem.selectedIndex].value == 'Amount') {
                    
                    $('#pge\\:frm\\:sGDPAmount').css("display", "inline");
                    
                    $('#pge\\:frm\\:sGDPPercent').val(null);
                    $('#pge\\:frm\\:sGDPCount').val(null);
                    
                } else if(elem.options[elem.selectedIndex].value == 'Count') {
                    
                    $('#pge\\:frm\\:sGDPCount').css("display", "inline");
                    
                    $('#pge\\:frm\\:sGDPPercent').val(null);
                    $('#pge\\:frm\\:sGDPAmount').val(null);
                }
            }
            
            //Function to control the value options
           /* function valueOptions(elem) {
                
                //Check for value
                if(elem.options[elem.selectedIndex].value == '' || elem.options[elem.selectedIndex].value == 'Template') {
                    $('#withoutBL').css("display",'inline');
                    $('#withBL').css("display",'none');
                } else {
                    $('#withoutBL').css("display",'none');
                    $('#withBL').css("display",'inline');
                }
            }*/
            
            //Function to control the pacing value in case of new
            function newGoalTDetailValue(elem) {
                
                //Set default style
                $('#pge\\:frm\\:gTDAmount').css("display", "none");
                $('#pge\\:frm\\:gTDCount').css("display", "none");
                $('#pge\\:frm\\:gTDPercent').css("display", "none");
                    
                //Check for option
                if(elem.options[elem.selectedIndex].value == 'Amount') {
                    
                    $('#pge\\:frm\\:gTDAmount').css("display", "inline");
                    $('#pge\\:frm\\:gTDCount').val(null);
                    $('#pge\\:frm\\:gTDPercent').val(null);
                    
                } else if(elem.options[elem.selectedIndex].value == 'Count') {
                    
                    $('#pge\\:frm\\:gTDCount').css("display", "inline");
                    $('#pge\\:frm\\:gTDAmount').val(null);
                    $('#pge\\:frm\\:gTDPercent').val(null);
                } else if(elem.options[elem.selectedIndex].value == 'Percent') {
                    
                    $('#pge\\:frm\\:gTDPercent').css("display", "inline");
                    $('#pge\\:frm\\:gTDAmount').val(null);
                    $('#pge\\:frm\\:gTDCount').val(null);
                }
            }
            function enableDisbaleDefineGoalTemplateActionButtons(){
                
                var $tableRow = $('.stdGoalDetails tbody').find('tr');
                
                //If not any checkbox selected all action button must be disbaled except of New Button, New will be always enabled
                var isAnyCheckBoxSelected = false;
                
                //If any checkbox selected but that row does containe traget type == 'explicit' and its parent is null.
                var isAnySelectedforCalcAndPull = false;
                
                $tableRow.each(function(i){
                    
                    if(!isAnyCheckBoxSelected && $(this).find('.condListCheck3')[0].checked){
                    
                        isAnyCheckBoxSelected = true;
                    }
                }); 
                
                if(!isAnyCheckBoxSelected){
                    $('.actionButton').each(function(i){
                        $(this)[0].disabled = true;
                        $(this).addClass('btnDisabled');
                    });
                }
                
                if(isAnyCheckBoxSelected){
                    $('.actionButton')[0].disabled = false;
                    $('.actionButton')[1].disabled = false; 
                    $('.actionButton').eq(0).removeClass('btnDisabled');
                    $('.actionButton').eq(1).removeClass('btnDisabled');
                    $('.actionButton')[2].disabled = false;
                    $('.actionButton').eq(2).removeClass('btnDisabled');
                }
            }
            
            //Function to populate the description and discount for goal template detail
            function populateGoalTemplateDetails(elem, descriptionId, discountId) {
                //Check for discription
                if($(descriptionId).val() == null || $(descriptionId).val() == '' || $(discountId).val() == null || $(discountId).val() == ''
                    || $(discountId).val() == 0) {
                    
                    populateGoalTDetails();
                }
            }  
            function populateBusinessTitleId(elem){
                document.getElementById('pge:frm:pB:businessTitleLookup1_lkid').value = document.getElementById('pge:frm:pB:businessTitleLookup_lkid').value;
                document.getElementById('pge:frm:pB:businessTitleLookup1_lkold').value = elem.value;
                document.getElementById('pge:frm:pB:businessTitleLookup1_mod').value = 1;
                document.getElementById('pge:frm:pB:businessTitleLookup1').value = elem.value;
                
                if(elem.value.trim() != ''){
                    elem.value = '';
                    document.getElementById('pge:frm:pB:businessTitleLookup_lkid').value = '';
                    document.getElementById('pge:frm:pB:businessTitleLookup_lkold').value = '';
                    document.getElementById('pge:frm:pB:businessTitleLookup').value = '';
                    $('busnessTitleLookupWrapper').find('input[type = "text"]').val('');
                    addBusinessTitle();
                }
            }
            
            //Added - Subhash Garhwal - 11/26/2015 - CR-20151120-9407
            
            function showGTDMPPopup(rowNum){
                showGTDDialogbox();
                showLoading();
                showGTDMPs(rowNum);
            }
            
            function showGTDDialogbox() {
              $("#gTDMPfilterPopup").show();
              $("#overlay").show();
            }
            
            function addGTDMPs(elem){
                if(validateRequiredData(elem) == true){
                    addGTDMP();    
                }
            }
            
            function openGTDMPDialogbox() {
                $("#gTDMPcustomDialog").show();
                $("#dialogWrapper").show();
                $('.mDInner').show();
                $("#gTDMPfilterPopup").hide();
                $("#overlay").show();
            }
            
            function refreshGTDMPs(){
                 
                $('#gTDMPcustomDialog').hide();
                $('#overlay').hide();
                $('.mDInner').hide();
                $("#gTDMPfilterPopup").show();
                $("#overlay").show();
                hideLoading();
            }
        </script>
        <style>
            
            .btnClass {
                border: 1px solid;
                border-radius: 5px;
                width: 68px;
                height: 23px;
            }
            .dataTable tr td , .dataTable tr th{
                padding : 5px;
                
            }
            .dataTable tr th {
                background-color: #cccccc;
            }
            .dataTable tr:nth-child(even) {
                background: #FFFFFF
            }
            .dataTable tr:nth-child(odd) {
                background: #F0F0F0
            }
            .dataTable tr {
                line-height: 25px;
            }
            #datePicker{z-index:103;}
            .MailSectionTable td{vertical-align:top;}
            .customDialog {
                position: absolute;
                height: auto;
                min-width:200px;
                min-height:100px;
                width: auto;
                top: 30%;
                left: 471px;
                display: block;
                z-index: 101;
                background:#FFFFAA !important;
                margin-top: -110px;
            }
            
            .headerMy {
                border: 1px solid #aaaaaa;
                background: #cccccc url("https://code.jquery.com/ui/1.11.4/themes/smoothness/images/ui-bg_highlight-soft_75_cccccc_1x100.png") 50% 50% repeat-x;
                color: #222222;
                font-weight: bold;
            }
            
            .typeSelect {
                margin-left: 10px;
            }
            .dialogWrapper{padding:20px;background-color:#FFFFAA;}
            .column {float: left;margin-right: 10px;}
            .col-left{width:27%;border:1px solid #ededed;}
            .col-left .col-block{padding:10px 5px 10px 10px;}
            .col-right{width:70%}
            .col-1,.col-2,.col-3{width:32%}
            .loadingBox{position:relative;width:300px;height:100px;}
            .loadingBox .loadingInnerWrapper{position:absolute;top:50%;left:30%}
            .requiredField{position:relative;}
            .requiredField .timeLineIcon-red {background: #D0212F;display: inline-block;width: 2px;position: absolute;top: 0;bottom: 0;left: -4px;}
            .customDialog table td{padding:5px;}
            .requiredSelect{border:1px solid #D0212F !important;}
            .eitherError{font-size:14px; color:#D0212F;}
            .errorMSG{font-size:14px; color:#D0212F;}
            #sGDconds{border-collapse: collapse;border:1px solid #e0e3e5;}
            #sGDconds th{background: #f2f3f3;border:1px solid #e0e3e5;color: #000;font-size: .9em;font-weight: bold;padding: 5px 2px 4px 5px;}
            #sGDconds td{border:1px solid #e0e3e5;}

            #payeeSummary{border-collapse: collapse;border:1px solid #e0e3e5;}
            #payeeSummary th{background: #f2f3f3;border:1px solid #e0e3e5;color: #000;font-size: .9em;font-weight: bold;padding: 5px 2px 4px 5px;}
            #payeeSummary td{border:1px solid #e0e3e5;}

            .contentFloterLeft {
                float:left;
            }
            .contentFloterRight {
                float:right;
            }
        </style>
    </head>
</apex:component>